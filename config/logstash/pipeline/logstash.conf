# Logstash Input Plugin
# File: https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html
# JSON Codec: https://www.elastic.co/guide/en/logstash/current/plugins-codecs-json.html

input {
  file {
    path => [ "/usr/share/data/*.log"]
    sincedb_path => "/usr/share/data/sincedb"
    start_position => "beginning"
    codec => "json"
  }
}

# Logstash Filter Plugins
# Grok: https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html
# Date: https://www.elastic.co/guide/en/logstash/current/plugins-filters-date.html

filter { 
  if [given_url] {
      grok {
        break_on_match => "false"
        match => { "given_url" => "%{URIPROTO}://%{URIHOST:given_domain}" }      
      }
  }

  if [resolved_url] {
    grok {
      break_on_match => "false"
      match => { "resolved_url" => "%{URIPROTO}://%{URIHOST:resolved_domain}" }
    }
  }

  date {
    match => ["time_added","UNIX"]
    timezone =>"UTC"
    target => ["@timestamp"]
    locale => "en"
      }

  date {
    match => ["time_added","UNIX"]
    timezone =>"UTC"
    target => ["time_added"]
    locale => "en"
      }

  date {
    match => ["time_updated","UNIX"]
    timezone =>"UTC"
    target => ["time_updated"]
    locale => "en"
      }
}


# Logstash Output Plugins 
# Elasticsearch: https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html
# StdOut: https://www.elastic.co/guide/en/logstash/current/plugins-outputs-stdout.html

output {
  elasticsearch {
    hosts    => [ 'elasticsearch:9200' ]
    manage_template => "false"
    index => "pocket"
    document_id => "%{item_id}"
    doc_as_upsert => "true"
    action => "update"
  }
  stdout { codec => rubydebug }
}