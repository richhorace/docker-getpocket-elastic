# Logstash Input Plugin
# File: https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html
# JSON Codec: https://www.elastic.co/guide/en/logstash/current/plugins-codecs-json.html

input {
  file {
    path => [ "/usr/share/data/getpocket-error.log"]
    # sincedb_path => "/usr/share/data/sincedb"
    start_position => "beginning"
    codec => "json"
  }
}

# Logstash Filter Plugins
# Grok: https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html
# Date: https://www.elastic.co/guide/en/logstash/current/plugins-filters-date.html

filter { 

  if [level] == "INFO"{
      date {
        match => ["[pocket_data][time_added]","UNIX"]
        timezone =>"UTC"
        target => ["@timestamp"]
        locale => "en"
      }

      if [pocket_data][given_url] {
          grok {
            break_on_match => "false"
            match => { "[pocket_data][given_url]" => "%{URIPROTO}://%{URIHOST:given_domain}" }      
          }
      }

      if [pocket_data][resolved_url] {
        grok {
          break_on_match => "false"
          match => { "[pocket_data][resolved_url]" => "%{URIPROTO}://%{URIHOST:resolved_domain}" }
        }
      }

      date {
        match => ["[pocket_data][time_added]","UNIX"]
        timezone =>"UTC"
        target => ["[pocket_data][time_added]"]
        locale => "en"
      }

      date {
        match => ["[pocket_data][time_updated]","UNIX"]
        timezone =>"UTC"
        target => ["[pocket_data][time_updated]"]
        locale => "en"
      }

      urldecode { 
        field => "[pocket_data][resolved_url]"
      }
    }
    else {

      date {
        match => ["[retrieved]","ISO8601"]
        timezone =>"UTC"
        target => ["@timestamp"]
        locale => "en"
      }

    }
  
}


# Logstash Output Plugins 
# Elasticsearch: https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html
# StdOut: https://www.elastic.co/guide/en/logstash/current/plugins-outputs-stdout.html

output {
  # elasticsearch {
  #   hosts    => [ 'elasticsearch:9200' ]
  #   manage_template => "false"
  #   index => "pocket"
  #   document_id => "%{item_id}"
  #   doc_as_upsert => "true"
  #   action => "update"
  # }
  stdout { codec => rubydebug }
}
